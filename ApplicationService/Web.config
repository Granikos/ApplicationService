<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="nikos" type="Nikos.Toolbelt.Configuration.ConfigurationSection, Nikos.Toolbelt" requirePermission="false" />
  </configSections>
  <!--<connectionStrings>
        <add name="dbno" providerName="System.Data.SqlClient"
             connectionString="Data Source=(Local)\sqlexpress;Initial Catalog=no_suwp;Integrated Security=True; MultipleActiveResultSets=True;" />
        <add name="dbno_carts" providerName="System.Data.SqlClient"
             connectionString="Data Source=(Local)\sqlexpress;Initial Catalog=no_suwp_carts;Integrated Security=True; MultipleActiveResultSets=True;" />
      <add name="dbadnsf" providerName="System.Data.SqlClient"
             connectionString="Data Source=(Local)\sqlexpress;Initial Catalog=WWW01SUWP;Integrated Security=True; MultipleActiveResultSets=True;" />
    </connectionStrings>-->
  <system.net>
    <defaultProxy>
      <proxy usesystemdefault="True" bypassonlocal="False" />
    </defaultProxy>
  </system.net>
  <nikos>
    <data>
      <SERVICEBASE>localhost:48561</SERVICEBASE>
      <FILESERVICEBASE>localhost:3181</FILESERVICEBASE>
      <LoadAssemblySymbols>true</LoadAssemblySymbols>
      <mode>dev</mode>
      <defaultlocktimeout>00:15:00</defaultlocktimeout>
      <pollingwaittime>00:00:10</pollingwaittime>
      <pollinginstancecount>10</pollinginstancecount>
      <cachetimeout>3</cachetimeout>
      <stores>
        <store>
          <connectionstring providerName="System.Data.SqlClient" connectionString="Data Source=(Local)\sqlexpress;Initial Catalog=no_suwp;Integrated Security=True; MultipleActiveResultSets=True;" />
        </store>
        <store name="carts">
          <connectionstring providerName="System.Data.SqlClient" connectionString="Data Source=(Local)\sqlexpress;Initial Catalog=no_suwp_carts;Integrated Security=True; MultipleActiveResultSets=True;" />
        </store>
      </stores>
      <!--<filestoresettings>..\Components\Output</filestoresettings>-->
      <!--<filestoresettings>c:\tmp\assemblies</filestoresettings>-->
      <composition>
        <mappings>
          <map interface="Nikos.Toolbelt.ILog, Nikos.Toolbelt" type="Nikos.Toolbelt.Loggers.Log4NetLogger, Nikos.Toolbelt.Loggers.Log4Net" reuse="Singleton" />
          <map interface="Nikos.One.Runtime.IPrincipalMapper, Nikos.One" type="Nikos.One.SimplePrincipalMapper, Nikos.One.DefaultImplementation" reuse="Singleton" />
          <map interface="Nikos.One.Runtime.IModelRepository, Nikos.One" type="Nikos.One.Repositories.ModelRepository, Nikos.One.DefaultImplementation" reuse="Singleton" />
          <map interface="Nikos.One.Repositories.IPrototypeRepository, Nikos.One.DefaultImplementation" type="Nikos.One.Repositories.PrototypeRepository, Nikos.One.DefaultImplementation" reuse="Singleton" />
          <map interface="Nikos.One.Repositories.IPrototypeCreator, Nikos.One.DefaultImplementation" type="Nikos.One.Repositories.PrototypeCreator, Nikos.One.DefaultImplementation" reuse="Singleton" />
          <map interface="Nikos.One.Repositories.ICartPrototypeCreator, Nikos.One.DefaultImplementation" type="Nikos.One.Repositories.CartPrototypeCreator, Nikos.One.DefaultImplementation" reuse="Singleton" />
          <map interface="Nikos.One.Runtime.IConfigurationStore, Nikos.One" type="Nikos.One.Modules.SqlDataStore, Nikos.One.Modules.SqlDataStore" resue="Transient" />
          <map interface="Nikos.One.Runtime.IFileStore, Nikos.One" type="Nikos.One.Modules.FileStore, Nikos.One.Modules.DatabaseFileStore" reuse="Singleton" />
          <map interface="Nikos.One.Templating.ITemplateRenderer, Nikos.One.Templating" type="Nikos.One.Templating.TemplateRenderer, Nikos.One.Templating" reuse="Singleton" />
          <!--<map interface="Nikos.One.Templating.ITemplateEngine, Nikos.One.Templating" type="Nikos.One.Templating.Engines.RazorTemplateEngine, Nikos.One.Templating.Razor" name="razor" reuse="Singleton" />-->
          <!--<map interface="Nikos.One.Runtime.IFileStore, Nikos.One" 
                             type="Nikos.One.Modules.FileSystemFileStore, Nikos.One.Modules.FileSystemFileStore" />-->
        </mappings>
      </composition>
      <!-- TODO: move client configuration into own child element -->
      <lockingserviceclientconfiguration>
        <configuration>
          <system.serviceModel>
            <client>
              <endpoint address="http://[SERVICEBASE]/Locking.svc" binding="basicHttpBinding" contract="Nikos.One.ServiceContracts.ILockingService" />
            </client>
          </system.serviceModel>
        </configuration>
      </lockingserviceclientconfiguration>
      <catalogserviceclientconfiguration>
        <configuration>
          <system.serviceModel>
            <bindings>
              <basicHttpBinding>
                <binding maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
                  <!--<security mode="TransportCredentialOnly">
                                                            <transport clientCredentialType="Windows" />
                                                          </security>-->
                </binding>
              </basicHttpBinding>
            </bindings>
            <client>
              <endpoint address="http://[SERVICEBASE]/Catalog.svc" binding="basicHttpBinding" contract="Nikos.One.ServiceContracts.ICatalogService" />
              <endpoint address="http://[SERVICEBASE]/Catalog.svc" binding="basicHttpBinding" contract="Nikos.One.ServiceContracts.IPreloadingService" />
            </client>
          </system.serviceModel>
        </configuration>
      </catalogserviceclientconfiguration>
      <orderserviceclientconfiguration>
        <configuration>
          <system.serviceModel>
            <bindings>
              <basicHttpBinding>
                <binding maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" receiveTimeout="00:10:00">
                  <!--<security mode="TransportCredentialOnly">
                                                            <transport clientCredentialType="Windows" />
                                                          </security>-->
                </binding>
              </basicHttpBinding>
            </bindings>
            <client>
              <endpoint address="http://[SERVICEBASE]/Order.svc" binding="basicHttpBinding" contract="Nikos.One.ServiceContracts.IOrderService" />
              <endpoint address="http://[SERVICEBASE]/Order.svc" binding="basicHttpBinding" contract="Nikos.One.ServiceContracts.IPreloadingService" />
            </client>
          </system.serviceModel>
        </configuration>
      </orderserviceclientconfiguration>
      <informationserviceclientconfiguration>
        <configuration>
          <system.serviceModel>
            <bindings>
              <basicHttpBinding>
                <binding maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" receiveTimeout="00:10:00">
                  <!--<security mode="TransportCredentialOnly">
                                                            <transport clientCredentialType="Windows" />
                                                          </security>-->
                </binding>
              </basicHttpBinding>
            </bindings>
            <client>
              <endpoint address="http://[SERVICEBASE]/Information.svc" binding="basicHttpBinding" contract="Nikos.One.ServiceContracts.IInformationService" />
            </client>
          </system.serviceModel>
        </configuration>
      </informationserviceclientconfiguration>
      <scriptserviceclientconfiguration>
        <configuration>
          <system.serviceModel>
            <bindings>
              <basicHttpBinding>
                <binding maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" sendTimeout="00:10:00">
                  <!--<security mode="TransportCredentialOnly">
                                                            <transport clientCredentialType="Windows" />
                                                          </security>-->
                </binding>
              </basicHttpBinding>
            </bindings>
            <client>
              <endpoint address="http://[SERVICEBASE]/Script.svc" binding="basicHttpBinding" contract="Nikos.One.ServiceContracts.IScriptService" />
            </client>
          </system.serviceModel>
        </configuration>
      </scriptserviceclientconfiguration>
      <globalconfigurationserviceclientconfiguration>
        <configuration>
          <system.serviceModel>
            <bindings>
              <basicHttpBinding>
                <binding maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
                  <!--<security mode="TransportCredentialOnly">
                                                            <transport clientCredentialType="Windows" />
                                                          </security>-->
                </binding>
              </basicHttpBinding>
            </bindings>
            <client>
              <endpoint address="http://[SERVICEBASE]/GlobalConfiguration.svc" binding="basicHttpBinding" contract="Nikos.One.ServiceContracts.IGlobalConfigurationService" />
            </client>
          </system.serviceModel>
        </configuration>
      </globalconfigurationserviceclientconfiguration>
      <fileserviceclientconfiguration>
        <configuration>
          <system.serviceModel>
            <bindings>
              <basicHttpBinding>
                <binding maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
                  <!--<security mode="TransportCredentialOnly">
                                                            <transport clientCredentialType="Windows" />
                                                          </security>-->
                </binding>
              </basicHttpBinding>
            </bindings>
            <client>
              <endpoint address="http://[FILESERVICEBASE]/File.svc" binding="basicHttpBinding" contract="Nikos.One.ServiceContracts.IFileService" />
            </client>
          </system.serviceModel>
        </configuration>
      </fileserviceclientconfiguration>
    </data>
  </nikos>
  <!--<system.diagnostics>
            <sharedListeners>
            <add name="AzureLocalStorage" type="Nikos.Toolbelt.Azure.LocalStorageTraceListener, Nikos.Toolbelt.Azure"
                    initializeData="nikosonetracing\wcf.svclog" />  
             </sharedListeners>
            <sources>
              <source name="System.ServiceModel" switchValue="Verbose, ActivityTracing">
                <listeners>
                  <add name="AzureLocalStorage"/>
                </listeners>
              </source>
              <source name="System.ServiceModel.MessageLogging" switchValue="Verbose">
                <listeners>
                  <add name="AzureLocalStorage"/>
                </listeners>
              </source>
            </sources>
            <trace>
              <listeners>
                <add type="Microsoft.WindowsAzure.Diagnostics.DiagnosticMonitorTraceListener, Microsoft.WindowsAzure.Diagnostics, Version=2.3.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                  name="AzureDiagnostics">
                  <filter type="" />
                </add>
              </listeners>
            </trace>
          </system.diagnostics>-->
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Information, ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="CardSpace">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="System.IO.Log">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="System.Runtime.Serialization">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="System.IdentityModel">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="Logs\svc.svclog" />
    </sharedListeners>
  </system.diagnostics>
  <system.web>
    <globalization uiCulture="de-DE" culture="de-DE" />
    <compilation debug="true" targetFramework="4.5" />
  </system.web>
  <system.serviceModel>
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="false" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="false" maxMessagesToLog="3000" maxSizeOfMessageToLog="2000000" />
    </diagnostics>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="webHttp">
          <webHttp defaultOutgoingResponseFormat="Json" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <bindings>
      <webHttpBinding>
        <binding maxReceivedMessageSize="2147483647" />
      </webHttpBinding>
      <basicHttpBinding>
        <binding maxBufferSize="2147483647" maxReceivedMessageSize="2147483647">
          <!--<security mode="TransportCredentialOnly">
                                    <transport clientCredentialType="Windows" />
                                  </security>-->
        </binding>
      </basicHttpBinding>
    </bindings>
    <services>
      <service name="Nikos.One.Services.ScriptService">
        <endpoint address="web" binding="webHttpBinding" behaviorConfiguration="webHttp" contract="Nikos.One.ServiceContracts.IScriptRestService" />
        <endpoint address="" binding="basicHttpBinding" contract="Nikos.One.ServiceContracts.IScriptService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <directoryBrowse enabled="true" />
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="msshrtmi" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.4.0.0" newVersion="2.4.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Edm" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.6.4.0" newVersion="5.6.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.Services.Client" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.6.4.0" newVersion="5.6.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.OData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.6.4.0" newVersion="5.6.4.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>